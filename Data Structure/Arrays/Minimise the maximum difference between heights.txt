//    https://practice.geeksforgeeks.org/problems/minimize-the-heights3351/1

class Solution{   
public:

    void swap(int &a, int &b) {
        int temp = a;
        a = b;
        b = temp;
    }
    
    int getMinDiff(int arr[], int n, int k) {
        // int max=0; int min = 0;
        // for(int i=1; i<n; i++) {
        //     min = arr[min]<arr[i] ? min : i;
        //     max = arr[max]>arr[i] ? max : i;
        // }
        // swap(arr[0], arr[min]);
        // if(max==0) max = min;
        // swap(arr[n-1], arr[max]);
        sort(arr, arr+n);
        // for(int i=0; i<n; i++) cout << arr[i] << '\n';
        int big = arr[n-1];
        int small = arr[0];
        int ans = arr[n-1]-arr[0];
        if(big<k) return ans;
        big-=k;
        small+=k;
        if(small>big) swap(small, big);
        if(ans<=big-small) return ans;
        int sub, add, diffsub, diffadd;
        for(int i=1; i<n-1; i++) {
            sub=arr[i]-k;
            add=arr[i]+k;
            // if(sub<0) sub=add;
            if(sub>=small || add<=big) continue;
            diffsub = small-sub;
            diffadd = add-big;
            if(diffsub<diffadd) small=sub;
            else big = add;
                    // cout << i << ' ' << big << ' ' << small << ' ';

        }
        // cout << ans << ' ' << big << ' ' << small << ' ';
        return (ans<big-small ? ans : big-small);
    }
