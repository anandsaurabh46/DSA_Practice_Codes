//   https://practice.geeksforgeeks.org/problems/kth-smallest-element5635/1

int swap(int &a, int &b) {
    int temp = a;
    a = b;
    b = temp;
}

int partition(int arr[], int s, int e) {
    int pos=s+1;
    int pivot=arr[s];
    for(int j=s+1; j<=e; j++) {
        if (arr[j]<pivot) swap(arr[pos++],arr[j]);
    }
    swap(arr[s], arr[pos-1]);
    return pos-1;
}

int randpartition(int arr[], int s, int e) {
    int x = s+(rand()%(e-s+1));
    swap(arr[x], arr[s]);
    return partition(arr, s, e);
}

int kthSmallest(int arr[], int l, int r, int k){
    if (k > 0 && k <= r - l + 1) 
    { 
   int pos = randpartition(arr, l, r);
   if(pos-l==k-1) return arr[pos];
   else if(pos-l>k-1) return kthSmallest(arr, l, pos-1, k);
   else return kthSmallest(arr, pos+1, r, k-pos+l-1);
    }
    return -1;
   }
