//     https://leetcode.com/problems/next-permutation/submissions/

#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

class Solution {
public:
    
    void swap(int &a, int &b) {
        int temp=a;
        a=b;
        b=temp;
    }
    
    void reverse(vector<int> &arr,int s, int e) {
        while(s<e) swap(arr[s++], arr[e--]);
    }
    
    int binary(vector<int>& arr, int l, int r, int k) {
        int mid;
        while(l<r) {
            mid=l+ceil((r-l)/2.0);
            if(k>=arr[mid]) r=mid-1;
            else l=mid;
        }
        return r;
    }
    
    void nextPermutation(vector<int>& nums) {
        int i;
        int n=nums.size();
        for(i=n-1; i>0; i--) {
            if(nums[i]>nums[i-1]) break;
        }    
        if(!i) reverse(nums, 0, n-1);
        else {
            swap(nums[i-1], nums[binary(nums, i, n-1, nums[i-1])]);
            reverse(nums, i, n-1);
        }
    }
};

